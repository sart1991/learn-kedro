name: 'Docker Build and Push'

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - 'requirements.txt'
      - 'src/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  TF_STATE_RESOURCE_GROUP_NAME: ${{ vars.TF_STATE_RESOURCE_GROUP_NAME }}
  TF_STATE_STORAGE_ACCOUNT_NAME: ${{ vars.TF_STATE_STORAGE_ACCOUNT_NAME }}
  TF_STATE_CONTAINER_NAME: ${{ vars.TF_STATE_CONTAINER_NAME }}

jobs:
  build-and-push:
    name: 'Build and Push Docker Image'
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of the Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false

    - name: Create state.config
      id: create_state_config
      working-directory: ./infra
      run: |
        echo "resource_group_name   = \"$TF_STATE_RESOURCE_GROUP_NAME\"
          storage_account_name  = \"$TF_STATE_STORAGE_ACCOUNT_NAME\"
          container_name        = \"$TF_STATE_CONTAINER_NAME\"
          key                  = \"terraform.tfstate\"
          tenant_id            = \"$ARM_TENANT_ID\"
          subscription_id      = \"$ARM_SUBSCRIPTION_ID\"" > state.config

    # Initialize Terraform to get the outputs
    - name: Terraform Init
      working-directory: ./infra
      run: terraform init -backend-config=state.config

    # Get ACR details from Terraform outputs
    - name: Get ACR Details
      id: acr_details
      working-directory: ./infra
      run: |
        ACR_NAME=$(terraform output -raw acr_name)
        ACR_LOGIN_SERVER=$(terraform output -raw acr_login_server)
        ACR_USERNAME=$(terraform output -raw acr_admin_username)
        ACR_PASSWORD=$(terraform output -raw acr_admin_password)
        
        echo "acr_name=$ACR_NAME" >> $GITHUB_OUTPUT
        echo "acr_login_server=$ACR_LOGIN_SERVER" >> $GITHUB_OUTPUT
        echo "acr_username=$ACR_USERNAME" >> $GITHUB_OUTPUT
        echo "acr_password=$ACR_PASSWORD" >> $GITHUB_ENV

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Login to Azure Container Registry
    - name: Login to ACR
      uses: docker/login-action@v3
      with:
        registry: ${{ steps.acr_details.outputs.acr_login_server }}
        username: ${{ steps.acr_details.outputs.acr_username }}
        password: ${{ env.acr_password }}

    # Build and push Docker image
    - name: Build and Push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ steps.acr_details.outputs.acr_login_server }}/kedro-app:latest
          ${{ steps.acr_details.outputs.acr_login_server }}/kedro-app:${{ github.sha }}
        cache-from: type=registry,ref=${{ steps.acr_details.outputs.acr_login_server }}/kedro-app:buildcache
        cache-to: type=registry,ref=${{ steps.acr_details.outputs.acr_login_server }}/kedro-app:buildcache,mode=max